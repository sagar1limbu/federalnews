spring.thymeleaf.cache=false
spring.thymeleaf.mode=LEGACYHTML5

server.port = 8090

#=====DATA SOURCE ======#

spring.datasource.url=jdbc:mysql://localhost:3306/federal
spring.datasource.username=root
spring.datasource.password=11devils

#keep connection alive if idle for a long (needed in production)
#

spring.datasource.tomcat.test-while-idle=true
spring.datasource.tomcat.validation-query=SELECT 1

#==============JPA/HIBERNATE===============

# use spring.jpa.properties.* for hibernate native properties (the prefix is
# stripped before adding them to the entity manager).

#show or not log for each sql query
spring.jpa.show-sql=true

#hibernate ddl auto(create, create-drop, update) with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
spring.jpa.hibernate.ddl-auto=update

#Allows hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

# ==============================================================
# = Spring Security / Queries for AuthenticationManagerBuilder
# ==============================================================
spring.queries.users-query=select username,password,enabled from users where username=?
spring.queries.roles-query=select u.username,r.name from users u inner join user_role ur on (u.id=ur.user_id) inner join roles r on (ur.role_id=r.role_id) where u.username=? 


spring.mail.host=smtp.gmail.com
spring.mail.username=hello2sagarlimbu@gmail.com
spring.mail.password=11Devils
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.socketFactory.port=465
spring.mail.properties.mail.smtp.socketFactory.class=javax.net.ssl.SSLSocketFactory
spring.mail.properties.mail.smtp.socketFactory.fallback=false
support.email=hello2sagarlimbu@gmail.com